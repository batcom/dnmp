# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["7.1.33", "7.2.33", "7.3.22", "7.4.10"]
        service: [php]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Runs a single command using the runners shell
      - name: build nginx image
        env:
          PHP_VERSION: ${{ matrix.php_version }}
        run: docker-compose build ${{ matrix.service }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        run: |
          docker login --username=batcom --password=${{ secrets.DOCKER_PASSWORD }}
          docker tag dnmp_php:${{ matrix.php_version }} batcom/dnmp_php:${{ matrix.php_version }}
          docker push batcom/dnmp_php:${{ matrix.php_version }}

